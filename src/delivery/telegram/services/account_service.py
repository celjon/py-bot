# src/delivery/telegram/services/account_service.py
import logging
from typing import Tuple
from src.domain.entity.user import User
from src.domain.usecase.account_connection import AccountConnectionUseCase

logger = logging.getLogger(__name__)


class AccountService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏"""

    @staticmethod
    async def generate_connection_link(user: User, account_connection_usecase: AccountConnectionUseCase) -> Tuple[
        bool, str]:
        """
        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞

        Returns:
            Tuple[bool, str]: (success, link_or_error_message)
        """
        try:
            # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å email, –∑–Ω–∞—á–∏—Ç –∞–∫–∫–∞—É–Ω—Ç —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω
            if user.email:
                return False, "‚úÖ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç Telegram —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∞–∫–∫–∞—É–Ω—Ç—É BotHub."

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
            link = await account_connection_usecase.generate_connection_link(user)
            return True, link

        except Exception as e:
            error_message = str(e)
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {error_message}", exc_info=True)

            if "502 Bad Gateway" in error_message or "–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" in error_message:
                return False, "üîÑ –°–µ—Ä–≤–µ—Ä BotHub –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            elif "NOT_ENOUGH_TOKENS" in error_message:
                return False, "üíé –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏."
            else:
                return False, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏."

    @staticmethod
    def format_connection_message(link: str) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å—Å—ã–ª–∫–æ–π –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏

        Args:
            link: –°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏

        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ñ–æ—Ä–º–∞—Ç –±–µ–∑ Markdown –¥–ª—è —Å—Å—ã–ª–∫–∏
        message = (
            "üîó –ü—Ä–∏–≤—è–∑–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ BotHub\n\n"
            "–î–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –≤–∞—à–µ–≥–æ Telegram –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É BotHub, "
            "–ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:\n\n"
            f"{link}\n\n"
            "–ü–æ—Å–ª–µ –ø—Ä–∏–≤—è–∑–∫–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—à–∏ —Ç–æ–∫–µ–Ω—ã –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ BotHub.\n\n"
            "üí° –ï—Å–ª–∏ —É –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ BotHub, —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –Ω–∞ bothub.chat"
        )

        return message