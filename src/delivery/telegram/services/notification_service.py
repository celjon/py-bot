# src/delivery/telegram/services/notification_service.py

import logging
from typing import Optional
from aiogram import Bot
from src.domain.entity.user import User

logger = logging.getLogger(__name__)


class NotificationService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""

    def __init__(self, bot: Bot):
        self.bot = bot

    async def send_account_connection_success(
        self,
        user: User,
        email: str,
        connection_type: str = "full_merge"
    ) -> bool:
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞

        Args:
            user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram
            email: Email –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
            connection_type: –¢–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (full_merge –∏–ª–∏ second_bot_connection)

        Returns:
            bool: True –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ
        """
        if not user.telegram_id:
            logger.warning(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} –Ω–µ—Ç telegram_id –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            return False

        try:
            if connection_type == "full_merge":
                message = (
                    "üéâ **–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω!**\n\n"
                    f"–í–∞—à Telegram —Ç–µ–ø–µ—Ä—å —Å–≤—è–∑–∞–Ω —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º BotHub:\n"
                    f"üìß **{email}**\n\n"
                    "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ —á–µ—Ä–µ–∑ —ç—Ç–æ–≥–æ –±–æ—Ç–∞!\n\n"
                    "‚ú® –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
                    "‚Ä¢ –û–±—â–µ–Ω–∏–µ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏\n"
                    "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n"
                    "‚Ä¢ –í–µ–±-–ø–æ–∏—Å–∫\n"
                    "‚Ä¢ –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!\n\n"
                    "–ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start"
                )
            elif connection_type == "second_bot_connection":
                message = (
                    "üîó **Python-–±–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω!**\n\n"
                    f"Python-–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É:\n"
                    f"üìß **{email}**\n\n"
                    "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±–∞ –±–æ—Ç–∞:\n"
                    "‚Ä¢ –û–±—ã—á–Ω—ã–π Telegram-–±–æ—Ç\n"
                    "‚Ä¢ **Python-–±–æ—Ç** (—ç—Ç–æ—Ç –±–æ—Ç)\n\n"
                    "–í–∞—à–∏ —Ç–æ–∫–µ–Ω—ã –∏ –ø–æ–¥–ø–∏—Å–∫–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ –æ–±–æ–∏—Ö –±–æ—Ç–∞—Ö.\n\n"
                    "–ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start"
                )
            else:
                # –û–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤
                message = (
                    "‚úÖ **–ê–∫–∫–∞—É–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω!**\n\n"
                    f"–í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–≤—è–∑–∞–Ω —Å:\n"
                    f"üìß **{email}**\n\n"
                    "–ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start"
                )

            await self.bot.send_message(
                chat_id=user.telegram_id,
                text=message,
                parse_mode="Markdown"
            )

            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id} (TG: {user.telegram_id})")
            return True

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}: {e}", exc_info=True)
            return False

    async def send_account_connection_error(
        self,
        user: User,
        error_message: str
    ) -> bool:
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞

        Args:
            user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram
            error_message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ

        Returns:
            bool: True –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ
        """
        if not user.telegram_id:
            logger.warning(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} –Ω–µ—Ç telegram_id –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ")
            return False

        try:
            message = (
                "‚ùå **–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞**\n\n"
                f"–ü—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n\n"
                f"**{error_message}**\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è.\n\n"
                "–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /link_account"
            )

            await self.bot.send_message(
                chat_id=user.telegram_id,
                text=message,
                parse_mode="Markdown"
            )

            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id} (TG: {user.telegram_id})")
            return True

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}: {e}", exc_info=True)
            return False

    async def send_generic_notification(
        self,
        user: User,
        title: str,
        message: str
    ) -> bool:
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

        Args:
            user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram
            title: –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

        Returns:
            bool: True –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ
        """
        if not user.telegram_id:
            logger.warning(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} –Ω–µ—Ç telegram_id –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            return False

        try:
            full_message = f"**{title}**\n\n{message}"

            await self.bot.send_message(
                chat_id=user.telegram_id,
                text=full_message,
                parse_mode="Markdown"
            )

            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ '{title}' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id} (TG: {user.telegram_id})")
            return True

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}: {e}", exc_info=True)
            return False